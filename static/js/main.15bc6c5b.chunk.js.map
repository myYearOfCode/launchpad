{"version":3,"sources":["App.js","serviceWorker.js","index.js","data.js"],"names":["questionCounter","App","thisLanguage","data","javascript","thisQuestionString","Math","floor","random","length","_thisQuestionString$s","split","_thisQuestionString$s2","Object","slicedToArray","thisQuestion","thisAnswer","document","addEventListener","zEvent","metaKey","code","console","log","getElementById","classList","add","remove","innerHTML","react_default","a","createElement","className","id","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","ruby"],"mappings":"4RAIIA,EAAkB,EAoDPC,mLAjDX,IAAIC,EAAeC,IAAKC,WACpBC,EAAqBH,EAAaI,KAAKC,MAAMD,KAAKE,SAAWN,EAAaO,SAFvEC,EAG0BL,EAAmBM,MAAM,KAHnDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGFK,EAHEH,EAAA,GAGYI,EAHZJ,EAAA,GAuBP,OAlBAK,SAASC,iBAAkB,UAAW,SAAUC,GAC1CA,EAAOC,SAA6B,UAAhBD,EAAOE,OAE7BrB,GAAmB,EACnBsB,QAAQC,IAAIvB,EAAkBA,EAAkB,IAAM,GAClDA,EAAkB,IAAM,GAC1BiB,SAASO,eAAe,UAAUC,UAAUC,IAAI,WAChDT,SAASO,eAAe,UAAUC,UAAUE,OAAO,YAGnDtB,EAAqBH,EAAaI,KAAKC,MAAMD,KAAKE,SAAWN,EAAaO,SAC1EQ,SAASO,eAAe,YAAYI,UAAYvB,EAAmBM,MAAM,KAAK,GAC9EM,SAASO,eAAe,UAAUC,UAAUC,IAAI,UAChDT,SAASO,eAAe,UAAUC,UAAUE,OAAO,WACnDV,SAASO,eAAe,UAAUI,UAAYvB,EAAmBM,MAAM,KAAK,OAKhFkB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,kBACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,QAAQD,UAAU,kBACvB1B,KAAKC,MAAMP,EAAgB,GAD9B,UAGA6B,EAAAC,EAAAC,cAAA,OAAKE,GAAG,aACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YACPlB,GAEDc,EAAAC,EAAAC,cAAA,OAAKE,GAAG,SAASD,UAAU,UACxBhB,IAGLa,EAAAC,EAAAC,cAAA,OAAKE,GAAG,eAAeD,UAAU,kBAAjC,uCAxCIE,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,MAASzB,SAASO,eAAe,SD2H3C,kBAAmBmB,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gCEtCnBC,EAAOC,QA7FI,CAAC9C,WAAa,+VAKzB,kEALyB,sxFAuCzB+C,KAAO,ySAMP,sEANO","file":"static/js/main.15bc6c5b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport data from './data';\n\nlet questionCounter = 0;\nclass App extends Component {\n  render() {\n    let thisLanguage = data.javascript\n    let thisQuestionString = thisLanguage[Math.floor(Math.random() * thisLanguage.length)]\n    let [thisQuestion, thisAnswer] = thisQuestionString.split(\":\")\n\n    document.addEventListener (\"keydown\", function (zEvent) {\n      if (zEvent.metaKey  &&  zEvent.code === \"Enter\") {\n        // DO STUFF HERE\n        questionCounter += 1;\n        console.log(questionCounter, (questionCounter % 2 !== 0))\n        if (questionCounter % 2 !== 0){\n          document.getElementById('answer').classList.add('visible')\n          document.getElementById('answer').classList.remove('hidden')\n        }\n        else {\n          thisQuestionString = thisLanguage[Math.floor(Math.random() * thisLanguage.length)];\n          document.getElementById('question').innerHTML = thisQuestionString.split(\":\")[0]\n          document.getElementById('answer').classList.add('hidden')\n          document.getElementById('answer').classList.remove('visible')\n          document.getElementById('answer').innerHTML = thisQuestionString.split(\":\")[1]\n        }\n      }\n    } );\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            <div id=\"outerContainer\">\n              <div id=\"stats\" className=\"secondary_text\">\n                {Math.floor(questionCounter/2.0)} cards\n              </div>\n              <div id=\"qaWrapper\">\n                <div id=\"question\">\n                {thisQuestion}\n                </div>\n                <div id=\"answer\" className=\"hidden\">\n                  {thisAnswer}\n                </div>\n              </div>\n              <div id=\"instructions\" className=\"secondary_text\">\n                command-enter to advance\n              </div>\n            </div>\n          </p>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","let data = {\"javascript\":[`what is repl?:Read Evaluate Print Loop`,\n`Why would you use a do/while loop: When you need the loop to run at least once`,\n`how do you typecast (coerce) a string named 'string' to an int?:parseInt(string)`,\n`how do you combine strings?:use the +`,\n`how do you get an index in the forEach loop?:array.forEach((element, index) => { your function here })`,\n\"what is the format for string interpolation?:backticks, and ${}\",\n`how can you search within a string and get a boolean?:string.search('search string')`,\n`how can you search within a string and get the index?:string.indexOf('search string')`,\n`how do you print to the screen?:console.log() (for most things) or console.dir() (for objects that you want to explore in the console.)`,\n`how would you create a new object of the class Dog named spot?:spot = new Dog(args)`,\n`how can you make an array called myArr? (2 ways):myArr = []`,\n`how can you remove trailing whitespace and newlines?:inputString = String.trim(inputString)`,\n`generate a random number between 0 and 4.:Math.random(0)*4`,\n`what are the falsey values in javascript?:false, 0 (zero), '' or \"\" (empty string), null, undefined, NaN`,\n`how do you evaluate for truth?:Boolean(thingToBeTested) \\n OR !!thingToBeTested`,\n`how do you increment a variable?:counter++ or counter += 1`,\n`what is the easiest way to loop 10x?:use a for loop`,\n`how do you write 3 to the 5th?:Math.pow(3,5)`,\n`what does regex.match(string) return in either case?:if true it returns an object (which evaluates to true), if false it returns false.`,\n`what does unshift do?:it adds to the beginning of an array.`,\n`how do you add a new array element to the beginning of an array?:unshift`,\n`how do you add a new array element to the end of an array?:push`,\n`how do you add a new array element to a specific index of an array?:array.splice(index,numElementsToDelete,itemToInsert)`,\n`check if an array has an element equal to x. (you are looking for a boolean):array.includes(element)`,\n`check if an array has an element equal to x. (you are looking for the index):array.indexOf(element)`,\n`delete an element of an array:array.splice(index,numElementsToDelete)`,\n`iterate over every element in an array.:array.forEach() (this is not recommended because it is inescapable)`,\n`how can you filter an array with a function?:array.select{|element| element.even?} will return even elements.`,\n`how can you filter an array with a function BUT return the array elements that failed the function?:array.reject{|element| element.even?} will return odd elements.`,\n`explain how the .sort method works:numbers.sort((a, b) => a - b) will numerically sort lowest to highest a-z`,\n`delete the element at index 2 of the array 'noses':noses.delete(2,1)`,\n`what is the syntax for array.find()?:array.find((element) => {return element > 0})`,\n`what is the difference in array.find and array.filter?:find returns one element, filter returns all matches.`,\n`what is the format for array.reduce?:array.reduce((accumulator,element) => accumulator + element)`,\n`what is the format for array.sort?:array.sort(elementA, elementB => elementA - elementB)`,\n`how does array.sort work?:the formula in it returns a number. if it is positive, one side goes first. negative and the other side goes first. 0? that's anyone's guess.`,\n\n],\n\n\"ruby\":[`what is repl?:Read Evaluate Print Loop`,\n`what is irb?:interactive ruby`,\n`what is pry:a ruby debugging tool`,\n`how do you use pry? (2 lines):require 'pry' ; binding.pry`,\n`how do you typecast (coerce) a string named 'string' to an int?:string = string.to_i`,\n`how do you combine strings?:use the +`,\n'what is the format for string interpolation?:double quotes, and #{}',\n`how can you search within a string and get a boolean?:string.include('search string')`,\n`how can you search within a string and get the index?:string.index('search string')`,\n`how do you print to the screen?:puts or print, depending if you want a line ending or not`,\n`how would you create a new object of the class Dog named spot?:spot = Dog.new`,\n`how can you make an array called myArr? (2 ways):myArr = [] ; myArr = Array.new`,\n`what is the best way to show an array in output?:p(arrayName), puts doesn't output anything.`,\n`how can you remove trailing whitespace and newlines?:.strip`,\n`generate a random number between 0 and 4.:rand(0..4)`,\n`what is the best way to check the variable counter for nil?:counter.nil?`,\n`what is indicated by a method that ends in ?:it returns a boolean usually`,\n`what are the falsey values in ruby?:false and nil`,\n`how do you evaluate for truth?:put an !! in front of it. `,\n`explain short circuit evaluation:put the more restrictive truth tests first in a multi && check so that they fail first and not all tests need to be evaluated.`,\n`show a basic rspec test.:\nrequire 'rspec/autorun'\ndescribe 'the name of the function to be tested' do\n    it 'should do a specific thing' do\n    expect(functionName(args)).to eq(expectedOutput)\n  end\nend\n`,\n`how do you increment a variable?:counter += 1`,\n`what is the easiest way to loop 10x?:10.times {}`,\n`how do you write 3 to the 5th?:3**5`,\n`what does regex.match(string) return in either case?:if true it returns an object (which evaluates to true), if false it returns false.`,\n`what is the shovel operator?:<< it is the same as .push`,\n`what does << do?:it is the same as push. it adds to the end of an array.`,\n`what does unshift do?:it adds to the beginning of an array.`,\n`how do you add a new array element to the beginning of an array?:unshift`,\n`how do you add a new array element to the end of an array?:push or shovel operator <<`,\n`how do you add a new array element to a specific index of an array?:array.insert(index,element to insert)`,\n`check if an array has an element equal to x. (you are looking for a boolean):array.include(element)`,\n`check if an array has an element equal to x. (you are looking for the index):array.index(element)`,\n`delete an element of an array:array.delete(element)`,\n`iterate over every element in an array.:array.each{|each|}`,\n`iterate over every element in an array AND keep the index.:array.each_with_index{|each,index|}`,\n`how is .map unlike .each?:.map returns a new array with the values returned from each loop of the function. each does not.`,\n`how can you mutate the array with map?:array.map! will mutate the input array`,\n`how can you filter an array with a function?:array.select{|element| element.even?} will return even elements.`,\n`how can you filter an array with a function BUT return the array elements that failed the function?:array.reject{|element| element.even?} will return odd elements.`,\n`explain how the .sort method works:array.sort(|first_element, second_element| second_element <=> first_element) will return a reverse order sort. the <=> (spaceship operator) returns -1,0,or 1.`,\n`delete the element at index 2 of the array 'noses':noses.delete_at(2)`,\n`how do you make a string all lowercase?:string = string.downcase`\n]\n}\n\n// console.log(data)\nmodule.exports = data\n"],"sourceRoot":""}